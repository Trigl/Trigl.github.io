---
layout:     post
title:      "Effective Java 读书笔记：Item 6"
date:       2019-08-31
author:     "Ink Bai"
header-img: "/img/post/effective-java-6.jpg"
catalog:    true
tags:
    - Effective Java
---

## Refer
JVM 垃圾回收机制

内存泄漏问题
http://frobisher.me/2017/09/13/java-memory-leaks/
https://www.jianshu.com/p/54b5da7c6816

防范手段

内存泄漏排错方法和工具

## Item 6：避免创建不必要的对象
这个条目不应该被误解为暗示对象创建是昂贵的，应该避免创建对象。相反，使用构造方法创建和回收小的对象是非常廉价，构造方法只会做很少的显示工作，尤其是在现代 JVM 实现上。创建额外的对象以增强程序的清晰 度，简单性或功能性通常是件好事。

相反，除非池中的对象非常重量级，否则通过维护自己的对象池来避免对象创建是一个坏主意。对象池的典型例子就是数据库连接。建立连接的成本非常高，因此重用这些对象是有意义的。但是，一般来说，维护自己的对象池会 使代码混乱，增加内存占用，并损害性能。现代 JVM 实现具有高度优化的垃圾收集器，它们在轻量级对象上轻松胜过此类对象池。

## Item 7：消除过期的对象引用
